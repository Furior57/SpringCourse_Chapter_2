<%--Первое что мы должны сделать чтобы работать со Spring MVC, это указать пространство имен.
Теперь наш jsp файл будет видеть специализированный синтаксис MVC для создания форм
Сейчас мы познакомимся с двумя видами форм, первая form:form - это основная форма, контейнер,
она содержит в себе остальные формф. form:input - форма предназначеная для текста.
В ней используется только одна строка--%>
<%@taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<!DOCTYPE html>
<html>
<body>
<h2> Dear Employee, please enter your details </h2>
<br>
<br>
<%--Вызываем тег form:form и передаем в него параметры, первый параметр - action, отвечает за то
какое действие будет совершено. Второй параметр modelAttribute - Spring видит где мы используем
этот view, а там где мы его используем мы определили объект model, в который атрибутом передали
класс Employee, значением параметра здесь мы передадим имя этого атрибута--%>
<form:form action="showDetails2" modelAttribute="employee">
    <%--Теперь определяем форму отвечающую за текст. Name перед тегом будет написан на странице.
    Далее в теге указываем тип формы-текстовый ввод, параметр path принимает строкой имя поля
    класса Employee к которому мы обращаемся. Последним тегом input мы создает кнопку, указываем ее тип
    и что на ней будет написано. После нажания кнопки submit срабатывают сеттеры, они задают
    значения соответствующим полям класса Employee. Перейдем в MySecondController на 26 строку--%>
    Name <form:input path="name"/>
    <br>
    <br>
    Surname <form:input path="surname"/>
    <br>
    <br>
    Salary <form:input path="salary"/>
    <br>
    <br>
<%--За выпадающий список отвечает форма select, параметром при открытии обязательно передается путь
к атрибуту в который будет записываться значение, у нас это поле department класса Employee--%>
    Department <form:select path="department">
<%--Здесь мы описываем варианты нашего выпадающего списка. value - значение которое будет записано,
label - короткое представление при выпадении списка. Не забываем закрыть тег form:select.
Также не забываем, что все значение должны быть присвоены ДО того как мы определим кнопку
подтверждения. Так же мы вывели информацию об отделе в show-emp-details2--%>
    <form:option value="Information technology" label="IT"/>
    <form:option value="Human resouces" label="HR"/>
    <form:option value="Sales" label="Sales"/>
<%--Мы можем воспользоваться и не хардкод вариантом. То есть все варианты выпадающего списка
можно записать в Map в нашем Employee, где ключом будет то значение, которое записывается, а
 значением будет короткое представление, label. Тогда весь код который мы тут написали поменяется на
 <form:options items="${}">. В фигурные скобки передаем ссылку на Map--%>
    </form:select><br><br>
    <input type="submit" value="OK">


</form:form>
</body>
</html>